#  Справочные материалы, уже готовые функции

#  Создание Одномерного Массива из текстового файла
   # Mas - название создаваемого массива
   # N - кол-во элементов массива
   # s = Fin.readline().split() - ввод строки в переменную
def Mass(Mas, N):
    Mas = [0] * N
    s = Fin.readline().split()
    for i in range(N):
        Mas[i] = float(s[i])
    return Mas

#  Создание Двухмерного Массива из текстового файла / Матрица
   # Mat - название создаваемой матрицы
   # N - кол-во строк матрицы
   # M - кол-во столбцов
   # s = Fin.readline().split() - ввод строки в переменную
def Matr(Mat, N, M):
    for i in range(N):
        Mat.append([0] * M)
        s = Fin.readline().split()
        for j in range(M):
            Mat[i][j] = float(s[j])
    return Mat

#  Задача с кузнечиком, который может прибавлять определённое число (1-L)
   # A - название создаваемого массива
   # N - число до которого должен дойти кузнечик
   # L - до какого числа кузнечик может прибавлять (1 - L)
def Kyz(A, N, L):
    A[0] = 1
    A[1] = 1
    for i in range(2, N + 1):
        A[i] = A[i - 1]
        j = 2
        while j <= i and j <= L:
            A[i] += A[i - j]
            j += 1
    return A

#  Задача с черепахой, где она считает мин.кол-во монет которое может собрать на пути в кв.матрице
   # A - название создаваемой матрицы
   # N - кол-во строк/столбцов матрицы (квадратная матрица)
   # мин.кол-во будет находится в правом нижнем углу (начало пути в левом верхнем)
def CHER(A, N):
    for i in range(1, N):
        A[0][i] += A[0][i-1]
    for i in range(1, N):
        A[i][0] += A[i-1][0]
    for i in range(1, N):
        for j in range(1, N):
            if A[i-1][j] >= A[i][j-1]:
                A[i][j] += A[i][j-1]
            else:
                A[i][j] += A[i-1][j]
    return A

#  Занесение слов в неупорядоченный словарь из текстового файла
   #  slov - название создаваемого словаря
   #  sim - символы разделения слов в файле
   #  word - переменная для записи слова постепенно по буквам
   #  s - переменная для считывания строк в файле
def Zapoln():
    sim = ' ,.;:?!-\n'
    word = ''
    slov = {}
    s = Fin.readline()
    while s:  # если есть слова в файле
        for i in s:
            if i in sim:  # если i символ
                if word in slov.keys():  # если есть слово в словаре
                    slov[word] += 1
                elif word != '':  # если нет слова в словаре
                    slov[word] = 1
                word = ''
            else:  # если i буква
                word += i.lower()
        s = Fin.readline()
    return slov

# Сортировка простыми вставками
def SSort(a, n):
    for i in range(1, n):
        z = a[i]
        j = i - 1
        while j >= 0 and z >= a[j]:
            a[j+1] = a[j]
            j -= 1
        a[j+1] = z
    return a